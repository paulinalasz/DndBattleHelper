<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- TextBlock Style -->
    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style TargetType="Run" x:Key="ActionName">
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="Trait" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="#912316"/>
        <!--<Setter Property="Foreground" Value="#58170d"/>-->
        <Setter Property="FontFamily" Value="Ariel"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="TraitName" BasedOn="{StaticResource Trait}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="5,0,5,0"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="EditTraitName" BasedOn="{StaticResource TraitName}">
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="Name" BasedOn="{StaticResource TraitName}">
        <Setter Property="FontSize" Value="24"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="EditName" BasedOn="{StaticResource TraitName}">
        <Setter Property="FontSize" Value="18"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="AbilityScore" BasedOn="{StaticResource TraitName}">
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="TabTitle">
        <Setter Property="Foreground" Value="#912316"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    
    <!--Run-->
    <Style TargetType="Run">
        <Setter Property="FontSize" Value="12"/>
    </Style>
    <Style TargetType="Run" x:Key="ActionNameRun">
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    <Style TargetType="Run" x:Key="TraitRun">
        <Setter Property="Foreground" Value="#912316"/>
        <!--<Setter Property="Foreground" Value="#58170d"/>-->
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Ariel"/>
    </Style>
    <Style TargetType="Run" x:Key="TraitNameRun" BasedOn="{StaticResource TraitRun}">
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style TargetType="Run" x:Key="NameRun" BasedOn="{StaticResource TraitNameRun}">
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <Style TargetType="Run" x:Key="AbilityScoreRun" BasedOn="{StaticResource TraitNameRun}">
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!--TextBox Styles-->
    <Style TargetType="TextBox">
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="#912316"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="bg" BorderBrush="#FF825E5E" Background="White" BorderThickness="1">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="BorderBrush" TargetName="bg" Value="#858585"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="#912316"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="#912316"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#858585"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="5" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="TextBox" x:Key="Traits" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MinWidth" Value="30"/>
    </Style>
    
    <!--Path Separator-->
    <Style TargetType="Path">
        <Setter Property="Fill" Value="#912316"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Data">
            <Setter.Value>
                <PathGeometry>
                    <PathFigure StartPoint="0,0">
                        <!-- Define a triangle-like shape -->
                        <LineSegment Point="300,3" />
                        <LineSegment Point="0,6" />
                        <LineSegment Point="0,6" />
                        <LineSegment Point="0,0" />
                    </PathFigure>
                </PathGeometry>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Separator">
        <Setter Property="Background" Value="#912316"/>
        <Setter Property="Height" Value="1"/>
    </Style>
    
    <!--Button Styles-->
    <Style TargetType="Button">
        <Setter Property="Background" Value="#912316"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#f7bf2d"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#8f6c68"/>
                <Setter Property="BorderBrush" Value="Gray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="ToolBar" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
    </Style>
    <Style TargetType="Button" x:Key="Actions" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="MaxWidth" Value="40"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="MinHeight" Value="40"/>
    </Style>
    <Style TargetType="Button" x:Key="OutputBox" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
    </Style>

    <Style TargetType="Button" x:Key="AddRemove" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="15"/>
        <Setter Property="MaxHeight" Value="15"/>
        <Setter Property="Padding" Value="2, 2, 2, 2"/>
    </Style>
    
    <!--Toggle Button-->
    <Style x:Key="ToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="#912316"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="black"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#f7bf2d"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="black"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#f7bf2d"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="black"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#f7bf2d"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="black"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="black"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="black"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <!--ComboBox Styles-->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="#912316"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5*" />
                                            <ColumnDefinition Width="15" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5" Background="#912316" BorderBrush="Black" BorderThickness="1" />
                                        <Border Grid.Column="0" CornerRadius="5,0,0,5"  Margin="1"  Background="White"  BorderBrush="Black" BorderThickness="0,0,1,0" />
                                        <Path x:Name="Arrow" Grid.Column="1"  Fill="#f7bf2d" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#f7bf2d" />
                                            <Setter TargetName="Arrow" Property="Fill" Value="#912316"/>
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#f7bf2d" />
                                            <Setter TargetName="Arrow" Property="Fill" Value="#912316"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"  />
                        <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="White" CornerRadius="5"/>
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <!-- ComboBoxItem Style -->
            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="#912316"/>
                <Setter Property="Padding" Value="4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#912316"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#912316"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

    <!--Image-->
    <Style TargetType="Image">
        <Setter Property="Margin" Value="1"/>
    </Style>
</ResourceDictionary>